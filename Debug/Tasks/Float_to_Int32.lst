TI ARM Assembler PC v18.1.2 Thu Aug 23 17:26:19 2018

Tools Copyright (c) 1996-2017 Texas Instruments Incorporated
../Tasks/Float_to_Int32.asm                                          PAGE    1

       1                    ;;*****************************************************************************
       2                    ;;
       3                    ;;      Float_to_Int32.asm
       4                    ;;
       5                    ;;              Author:                 Gary J. Minden
       6                    ;;              Organization:   KU/EECS/EECS 690
       7                    ;;              Date:                   2017-10-06 (B71006)
       8                    ;;              Version:                1.0
       9                    ;;
      10                    ;;              Purpose:                Copy float bits to int32_t.
      11                    ;;
      12                    ;;              Notes:
      13                    ;;
      14                    ;;*****************************************************************************
      15                    ;;
      16                    
      17                    ;;
      18                    ;;      This subroutine computes a value based on one input arguement.
      19                    ;;      The arguments is assumed to be in CPU registes R0
      20                    ;;        (aka A1).
      21                    ;;      The result is returned in R0.
      22                    ;;
      23                    
      24                    ;;      Declare sections and external references
      25                    
      26                                    .global         Float_to_Int32                  ; Declare entry point as a global symb
      27                    
      28                    ;;      No constant data
      29                    
      30                    ;;      No variable allocation
      31                    
      32                    ;;      Program instructions
      33                    
      34 00000000                           .text                                                           ; Program section
      35                    
      36 00000000           Float_to_Int32:                                                         ; Entry point
      37                    
      38                    ;;
      39                    ;;      Save necessary registers
      40                    ;;
      41                    ;;      Since this subroutine does not use registers other than R0,
      42                    ;;        and we do not call another subroutine, we don't need to save
      43                    ;;        any registers.
      44                    ;;
      45                    ;;      Allocate local variables on the Stack
      46                    ;;
      47                    ;;      Since this subroutine does not have local variables,
      48                    ;;        no Stack space need be allocated.
      49                    ;;
      50                    ;;      This subroutine returns the input argument in R0.
      51                    ;;
      52 00000000 4770                      BX                      LR                              ; Branch to the program addres
      53                    
      54                                    .end

No Assembly Errors, No Assembly Warnings
